income form

//   <div className="fixed -top-10  inset-20 flex items-center justify-center z-50">
      //   <div className="mx-auto w-[30%] space-y-6 bg-white p-8 rounded-3xl">
      //     <div className="text-center space-y-1 -mb-10">
      //       <h1 className="text-3xl font-bold">Income Tracker</h1>
      //       <p className="text-gray-500">
      //         Add your income details to keep track of your finances.
      //       </p>
      //     </div>
      //     <form className="space-y-4" onSubmit={(e) => e.preventDefault()}>
      //       <div className="space-y-2">
      //         <label htmlFor="title" className="block text-sm font-medium text-gray-700">
      //           Title
      //         </label>
      //         <input
      //           type="text"
      //           id="title"
      //           value={title1}
      //           onChange={(e) => setTitle1(e.target.value)}
      //           placeholder="Enter the income title"
      //           required
      //           className="mt-1 block w-full p-2 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      //         />
      //       </div>
      //       <div className="space-y-2">
      //         <label htmlFor="date" className="block text-sm font-medium text-gray-700">
      //           Date
      //         </label>
      //         <Datepicker 
      //           value={date1}
      //           onSelectedDateChanged={(date) => setDate1(date)}
      //           //format="DD MMM YYYY"
      //           options={options}
      //           onChange={handleChange} show={show} setShow={handleClose} 
      //           //datepicker-format="mm/dd/YYYY"
      //         />
      //       </div>
      //       <div className="space-y-2">
      //         <label htmlFor="amount" className="block text-sm font-medium text-gray-700">
      //           Amount
      //         </label>
      //         <input
      //           type="number"
      //           id="amount"
      //           value={amount1}
      //         onChange={(e) => setAmount1(e.target.value)}
      //           placeholder="Enter the income amount"
      //           required
      //           className="mt-1 block w-full p-2 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      //         />
      //       </div>
      //       <div className="flex justify-end gap-2">
      //         <button
      //           type="button"
      //           className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
      //           onClick={closeModal}
      //         >
      //           Cancel
      //         </button>
      //         <button
      //           type="submit"
      //           className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" onClick={handleSubmit}
      //         >
      //           Save
      //         </button>
      //       </div>
      //     </form>
      //   </div>
      // </div>


expense form

// <div className="fixed -top-14 inset-10  flex items-center justify-center z-50">
        //   <div className="mx-auto w-[40%] space-y-6 bg-white p-8 rounded-3xl">
        //     <div className="space-y-2 text-center">
        //       <h1 className="text-3xl font-bold">Expense Tracker</h1>
        //       <p className="text-gray-500 dark:text-gray-400">
        //         Add your expense details to keep track of your finances.
        //       </p>
        //     </div>
        //     <form className="space-y-4" onSubmit={(e) => preventDefault()}>
        //       <div className="grid grid-cols-2 gap-4">
        //         <div className="space-y-2">
        //           <label
        //             htmlFor="title"
        //             className="block text-sm font-medium text-gray-700"
        //           >
        //             Title
        //           </label>
        //           <input
        //             type="text"
        //             id="title"
        //             value={title}
        //             onChange={(e) => setTitle(e.target.value)}
        //             onBlur={() => handleBlur("title")}
        //             placeholder="Enter the income title"
        //             required
        //             className="mt-1 block w-full p-2 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        //           />
        //           {touched.title && errors.title && (
        //             <div style={{ color: "red" }}>{errors.title}</div>
        //           )}
        //         </div>
        //         <div className="space-y-2">
        //           <label
        //             htmlFor="date"
        //             className="block text-sm font-medium text-gray-700"
        //           >
        //             Date
        //           </label>
        //           <Datepicker />
        //           {touched.date && errors.date && (
        //             <div style={{ color: "red" }}>{errors.date}</div>
        //           )}
        //         </div>
                
        //       </div>
        //       <div className="grid grid-cols-2 gap-4">
        //       <div className="space-y-2">
        //           <label
        //             htmlFor="amount"
        //             className="block text-sm font-medium text-gray-700"
        //           >
        //             Amount
        //           </label>
        //           <input
        //             type="number"
        //             id="amount"
        //             value={amount}
        //             onChange={(e) => setAmount(e.target.value)}
        //             onBlur={() => handleBlur("amount")}
        //             placeholder="Enter the income amount"
        //             required
        //             className="mt-1 block p-2 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        //           />
        //           {touched.amount && errors.amount && (
        //             <div style={{ color: "red" }}>{errors.amount}</div>
        //           )}
        //         </div>
        //         <div className="space-y-2">
        //           <label
        //             htmlFor="category"
        //             className="block text-sm font-medium text-gray-700"
        //           >
        //             Category
        //           </label>
        //           {/* <select
        //             id="category"
        //             required
        //             className="mt-1 p-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        //           >
        //             <option value="">Select a category</option>
        //             <option value="salary">Salary</option>
        //             <option value="freelance">Freelance</option>
        //             <option value="investment">Investment</option>
        //             <option value="other">Other</option>
        //           </select> */}
        //           <Listbox
        //             value={selected}
        //             onChange={setSelected}
        //             onBlur={() => handleBlur("selected")}
        //           >
        //             {({ open }) => (
        //               <>
        //                 {/* <Listbox.Label className="block text-sm font-medium leading-6 text-gray-900">
        //                   Assigned to
        //                 </Listbox.Label> */}
        //                 <div className="relative mt-2">
        //                   <Listbox.Button className="relative w-full cursor-default rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 sm:text-sm sm:leading-6">
        //                     <span className="flex items-center">
        //                       <img
        //                         src={selected.avatar}
        //                         alt=""
        //                         className="h-5 w-5 flex-shrink-0 rounded-full"
        //                       />
        //                       <span className="ml-3 block truncate">
        //                         {selected.name}
        //                       </span>
        //                     </span>
        //                     <span className="pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2">
        //                       <ChevronUpDownIcon
        //                         className="h-5 w-5 text-gray-400"
        //                         aria-hidden="true"
        //                       />
        //                     </span>
        //                   </Listbox.Button>

        //                   <Transition
        //                     show={open}
        //                     as={Fragment}
        //                     leave="transition ease-in duration-100"
        //                     leaveFrom="opacity-100"
        //                     leaveTo="opacity-0"
        //                   >
        //                     <Listbox.Options className="absolute z-10 mt-1 max-h-56 w-full overflow-auto no-scrollbar rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm">
        //                       {people.map((person) => (
        //                         <Listbox.Option
        //                           key={person.id}
        //                           className={({ active }) =>
        //                             classNames(
        //                               active
        //                                 ? "bg-indigo-600 text-white"
        //                                 : "text-gray-900",
        //                               "relative cursor-default select-none py-2 pl-3 pr-9"
        //                             )
        //                           }
        //                           value={person}
        //                         >
        //                           {({ selected, active }) => (
        //                             <>
        //                               <div className="flex items-center">
        //                                 <img
        //                                   src={person.avatar}
        //                                   alt=""
        //                                   className="h-5 w-5 flex-shrink-0 rounded-full"
        //                                 />
        //                                 <span
        //                                   className={classNames(
        //                                     selected
        //                                       ? "font-semibold"
        //                                       : "font-normal",
        //                                     "ml-3 block truncate"
        //                                   )}
        //                                 >
        //                                   {person.name}
        //                                 </span>
        //                               </div>

        //                               {selected ? (
        //                                 <span
        //                                   className={classNames(
        //                                     active
        //                                       ? "text-white"
        //                                       : "text-indigo-600",
        //                                     "absolute inset-y-0 right-0 flex items-center pr-4"
        //                                   )}
        //                                 >
        //                                   <CheckIcon
        //                                     className="h-5 w-5"
        //                                     aria-hidden="true"
        //                                   />
        //                                 </span>
        //                               ) : null}
        //                             </>
        //                           )}
        //                         </Listbox.Option>
        //                       ))}
        //                     </Listbox.Options>
        //                   </Transition>
        //                 </div>
        //               </>
        //             )}
        //           </Listbox>
        //           {touched.category && errors.category && (
        //             <div style={{ color: "red" }}>{errors.category}</div>
        //           )}
        //         </div>
        //       </div>
        //       <div className="flex justify-end gap-2">
        //         <button
        //           type="button"
        //           className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        //           onClick={closeModal}
        //         >
        //           Cancel
        //         </button>
        //         <button
        //           type="submit"
        //           className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        //           onClick={handleSubmit}
        //         >
        //           Save
        //         </button>
        //       </div>
        //     </form>
        //   </div>
        // </div>




        performance card

        const IncomeGoalTracker = () => {
  const goalAmount = 26344; // Total goal amount
  const currentAmount = 18850; // Current progress amount
  const progressPercentage = Math.round((currentAmount / goalAmount) * 100);

  return (
    <div className="bg-indigo-900 text-white p-4 rounded-lg shadow-lg max-w-xs mx-auto">
      <div className="flex justify-between mb-2">
        <span className="text-lg font-bold">{progressPercentage}%</span>
        <span>Income Goal</span>
      </div>
      <div className="text-xs">Progress to month</div>
      <div className="w-full bg-indigo-800 rounded-full h-2.5 dark:bg-gray-700 mt-2">
        <div
          className="bg-purple-600 h-2.5 rounded-full"
          style={{ width: `${progressPercentage}%` }}
        ></div>
      </div>
      <div className="mt-2 text-sm">
        <span>${currentAmount.toLocaleString()}</span> / $
        {goalAmount.toLocaleString()}
      </div>
    </div>
  );
};



Bar chart
 // series: [
    //   {
    //     name: "Income",
    //     data: [21000, 19000, 22000, 25000, 24000, 23000],
    //     color: "rgba(54, 162, 235, 0.7)",
    //   },
    //   {
    //     name: "Expense",
    //     data: [18000, 17000, 19000, 22000, 20000, 21000],
    //     color: "rgba(255, 99, 132, 0.7)",
    //   },
    // ],





    // const options = {
  //   chart: {
  //     type: 'column',
  //   },
  //   title: {
  //     text: 'My Cards'
  //   },
  //   xAxis: {
  //     categories: ['Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov']
  //   },
  //   yAxis: {
  //     min: 0,
  //     title: {
  //       text: 'Amount'
  //     },
  //     labels: {
  //       overflow: 'justify'
  //     }
  //   },
  //   tooltip: {
  //     shared: true,
  //     valuePrefix: '$'
  //   },
  //   plotOptions: {
  //     column: {
  //       //borderRadius: 10, // Increased borderRadius for more circular edges
  //       //pointPadding: 0.1,
  //  // borderWidth: 0,
  //       dataLabels: {
  //         enabled: false
  //       },

  //     },
  //     bar: {
  //       borderRadiusTopLeft: 10,
  //       borderRadiusTopRight: 10,
  //       borderRadiusBottomLeft: 10,
  //       borderRadiusBottomRight: 10
  //   }
  //   },
  //   series: [{
  //     name: 'Income',
  //     data: [21000, 19000, 22000, 25000, 24000, 23000],
  //     color: 'rgba(54, 162, 235, 0.7)'
  //   }, {
  //     name: 'Expense',
  //     data: [18000, 17000, 19000, 22000, 20000, 21000],
  //     color: 'rgba(255, 99, 132, 0.7)'
  //   }],
  //   credits: {
  //     enabled: false
  //   },
  //   legend: {
  //     layout: 'horizontal', // Use 'horizontal' for bottom placement
  //     align: 'center', // Aligns the legend box to the middle of the chart
  //     verticalAlign: 'bottom', // Places the legend at the bottom
  //     x: 0, // Centers it on the x-axis
  //     y: 0, // Aligns it with the bottom of the chart
  //     floating: false, // Should not float if it is at the bottom
  //     borderWidth: 1,
  //     backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',
  //     //shadow: true
  //   }
  // };